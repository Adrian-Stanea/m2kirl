#!/bin/bash
set -e
#set -x

echo USAGE: ./m2kirl-deploy \<option\>
echo
echo Usecase - setup in place:
echo install_deps - install deps from internet
echo make_build - download deps from the internet and build
echo 
echo Usecase - create zip file for further use
echo pack_deps - download deps from the internet and create archive
echo pack_build - create zip file with dependencies
echo 
echo Usecase - deploy from zip file \(setups without internet accessi\)
echo unpack_deps - deploy deps from the archive
echo unpack_build - deploy from zip file
echo
echo !! WARNING - this script also changes the date/time of the system !!
echo
SCOPY_DECODER_LOCATION=/var/lib/flatpak/app/org.adi.Scopy/arm/master/2eb23ee2c0bbd73478c4c8d7720ae584df8332dbf94a4e2ee5d4a9dfbf36b935/files/share/libsigrokdecode/decoders/
SIGROK_CLI_DECODER_LOCATION=/usr/local/share/libsigrokdecode/decoders/
HSTPWI_REPO=https://github.com/cristina-suteu/ftc23-hstpwi
M2KIRL_REPO=https://github.com/adisuciu/m2kirl 

STAGING_DIR=/home/analog/tmp
OUTPUT_FOLDER=/home/analog/
BUILDZIPFILE=m2kirl-build.tar
DEPSZIPFILE=m2kirl-deps.tar
EXTRASZIPFILE=m2kirl-extras.tar
WORKDIR=/home/analog/m2kirl
WORKDIR_HSTPWI=/home/analog/ftc23-hstpwi

LIBM2K_VER=7b31a3d
PYADI_VER=8bcfac1
SIGROKDECODE_VER=0c35c5c
SIGROKCLI_VER=9d9f7b8
GENALYZER_VER=7ab380d
PIP=pip3
SETTIME=1

settime() {

if [ $SETTIME == 1 ]; then
echo $@
echo -- setting date to a default value
sudo date -s "$@"
echo -- restarting NTP service
sudo service ntp stop && echo stopping
sudo service ntp start && echo starting
sudo ntpd && echo ntpd
echo -- service restarted .. sleeping 30 seconds
sleep 10
date
echo -- 10
sleep 10
date
echo -- 20
sleep 10
date
echo -- 30 
fi
}

install_deps() {
sudo apt-get install libbluetooth-dev libftdi1-dev libftdi1-doc libhidapi-dev libhidapi-hidraw0 libhidapi-libusb0 libsigrok-dev libsigrok4 sntp ntp libopts25 #libopenblas-dev libopenblas-pthread-dev libopenblas0 libopenblas0-pthread
$PIP install --upgrade pip
sudo apt remove -y python3-matplotlib
$PIP install matplotlib==3.8.2
#$PIP install scipy==1.11.2
$PIP install pylibiio
$PIP install paramiko
}

pack_deps() {
apt-get download libbluetooth-dev libftdi1-dev libftdi1-doc libhidapi-dev libhidapi-hidraw0 libhidapi-libusb0 libsigrok-dev libsigrok4 sntp ntp libopts25 #libopenblas-dev libopenblas-pthread-dev libopenblas0 libopenblas0-pthread
$PIP download pip
$PIP download setuptools
$PIP download wheel
#$PIP download numpy==1.20
$PIP download pylibiio
$PIP download matplotlib==3.8.2
#$PIP download scipy==1.11.2
$PIP download paramiko
echo -- creating $DEPSZIPFILE
tar cvf $DEPSZIPFILE *.whl *.deb
ls -la $DEPSZIPFILE
}

unpack_deps() {
mkdir -p $STAGING_DIR
tar xvf $DEPSZIPFILE -C $STAGING_DIR
pushd $STAGING_DIR
sudo dpkg -i *.deb
#$PIP install *.whl
popd
}

clear_staging() {
sudo rm -rf $STAGING_DIR
}

m2kirl() {
echo -- cloning m2kirls
mkdir -p $STAGING_DIR
pushd $STAGING_DIR
git clone $M2KIRL_REPO m2kirl-src
popd
}

hstpwi() {
echo -- cloning hstpwi
mkdir -p $STAGING_DIR
pushd $STAGING_DIR
git clone $HSTPWI_REPO ftc23-hstpwi
popd

}

libm2k() {
echo -- installing libm2k
pushd $STAGING_DIR
git clone https://github.com/analogdevicesinc/libm2k
cd libm2k
git reset --hard $LIBM2K_VER 
mkdir build && cd build
cmake -DENABLE_TOOLS=ON -DENABLE_PYTHON=ON ../
make
sudo make install
popd
}

pyadiiio() {
echo -- installing pyadi-iio
pushd $STAGING_DIR
git clone https://github.com/analogdevicesinc/pyadi-iio
cd pyadi-iio
git reset --hard $PYADI_VER
$PIP install $PIP_OPTS .

popd
}

libsigrokdecode() {
echo -- installing libsigrokdecode
pushd $STAGING_DIR
git clone https://github.com/sigrokproject/libsigrokdecode
cd libsigrokdecode
git reset --hard $SIGROKDECODE_VER
./autogen.sh
./configure
make
sudo make install
popd
}

sigrokcli() {
echo -- installing sigrok-cli
pushd $STAGING_DIR
git clone https://github.com/sigrokproject/sigrok-cli
cd sigrok-cli
git reset --hard $SIGROKCLI_VER
./autogen.sh
./configure
make
sudo make install
popd
}

genalyzer() {
echo -- installing genalyzer
pushd $STAGING_DIR
git clone https://github.com/analogdevicesinc/genalyzer
cd genalyzer
git reset --hard $GENALYZER_VER
mkdir build && cd build
cmake -DPYTHON_BINDINGS=ON -DBUILD_TESTS_EXAMPLES=ON_ ../
make
sudo make install
popd

}

zip() {
echo -- building zip
#create archive
sudo tar -cvf $BUILDZIPFILE -C $STAGING_DIR .
ls -la $BUILDZIPFILE $(basename "$0") $DEPSZIPFILE
}

unzip() {
mkdir -p $STAGING_DIR
sudo tar xvf $BUILDZIPFILE -C $STAGING_DIR
}

install_dt() {
echo -- copying devicetree
sudo cp $WORKDIR/dt/config.txt /boot/
sudo cp $WORKDIR/dt/rpi-ad5592r-m2kirl.dtbo /boot/overlays
sudo cp $WORKDIR/dt/rpi-ad5593r-m2kirl.dtbo /boot/overlays
}

install_decoder() {
echo -- copying decoder to scopy
sudo cp -R $WORKDIR/decoder/ad5592r $SCOPY_DECODER_LOCATION
sudo cp -R $WORKDIR/decoder/ad5593r $SCOPY_DECODER_LOCATION

echo -- copying decoder to sigrok-cli
sudo cp -R $WORKDIR/decoder/ad5592r $SIGROK_CLI_DECODER_LOCATION
sudo cp -R $WORKDIR/decoder/ad5593r $SIGROK_CLI_DECODER_LOCATION
}

install_workdir() {
rm -rf $WORKDIR
rm -rf $WORKDIR_HSTPWI
cp -R $STAGING_DIR/m2kirl-src $WORKDIR
cp -R $STAGING_DIR/ftc23-hstpwi $WORKDIR_HSTPWI
}

install_keyboard() {
echo -- setting default keyboard to US
sudo cp $WORKDIR/res/keyboard /etc/default/
}

deploy_libs() {
echo -- installing libm2k
pushd $STAGING_DIR/libm2k/build
sudo make install
popd

pushd $STAGING_DIR
sudo apt -y remove python3-matplotlib
$PIP install $PIP_OPTS matplotlib==3.8.2
#$PIP install $PIP_OPTS scipy==1.11.2
popd

echo -- installing pyadi-iio
pushd $STAGING_DIR/pyadi-iio
$PIP install $PIP_OPTS .
popd

echo -- installing libsigrokdecode
pushd $STAGING_DIR/libsigrokdecode
sudo make install
popd
echo -- installing sigrok-cli
pushd $STAGING_DIR/sigrok-cli
sudo make install
popd

echo -- installing genalyzer
pushd $STAGING_DIR/genalyzer/build
sudo make install
popd
}

make_build() {
settime "10 DEC 2023 12:45"
clear_staging
m2kirl
hstpwi
install_workdir
libm2k
pyadiiio
libsigrokdecode
sigrokcli
genalyzer
install_keyboard
sudo apt-get -y remove libsigrokdecode-dev sigrok-cli
install_dt
install_decoder
sudo ldconfig
}

pack_build() {
settime "17 NOV 2023 12:45"
clear_staging
m2kirl
hstpwi
libm2k
pyadiiio
libsigrokdecode
sigrokcli
genalyzer
zip
}

unpack_build() {
settime "10 DEC 2023 12:45"
PIP_OPTS="--no-index --find-links $STAGING_DIR"
unzip
install_workdir
install_keyboard
echo -- uninstalling sigrok-cli libsigrokdecode
sudo apt-get -y remove libsigrokdecode-dev sigrok-cli
install_dt
deploy_libs
install_decoder
sudo ldconfig
}

unpack_all() {
	unpack_deps
	unpack_build
	unpack_extras
	echo "The system will now reboot. Don't forget to run verify scripts after reboot"
	read -p "Press enter to reboot / ctrl+c to skip"
	reboot
}

pack_extras() {
tar -cvf m2kirl-extras.tar -C ./extras .
}

unpack_extras() {
tar xvf $EXTRASZIPFILE -C /home/analog/Desktop/
}

disable_vc4() {
sudo sed -i '/vc4-kms-v3d/s/^#*/#/g' /boot/config.txt
}

enable_vc4() {
sudo sed -i '/vc4-kms-v3d/s/^#*//g' /boot/config.txt
} 

$@
